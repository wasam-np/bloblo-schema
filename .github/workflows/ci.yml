name: Generate and Publish Packages

on:
  push:
    tags:
      - 'v*'  # triggers on version tags like v1.0.0
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Generate and Publish

    steps:
      - uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install Quicktype
        run: npm install -g quicktype

      - name: Make script executable
        run: chmod +x scripts/generate_models.sh

      - name: Generate Models from Schemas
        run: scripts/generate_models.sh

        # --- NPM Package Steps ---
      - name: Navigate to npm package directory
        run: cd packages/npm

      - name: Set npm package version from Git tag (if release)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd packages/npm
          # Extract version from tag and remove build metadata
          PACKAGE_VERSION=${GITHUB_REF/refs\/tags\/v/}
          PACKAGE_VERSION=${PACKAGE_VERSION%%+*}  # Remove everything after + (if present)
          npm version $PACKAGE_VERSION --no-git-tag-version # Update package.json
          echo "NPM package version set to $PACKAGE_VERSION"
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Install dependencies and build
        working-directory: ./packages/npm
        run: |
          npm install
          npm run build

      - name: Publish to npm
        working-directory: ./packages/npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NuGet
        working-directory: ./src/dotnet
        run: dotnet pack && dotnet nuget push bin/Debug/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
